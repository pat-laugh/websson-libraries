?{
	Date(year=2016, month=09, day=24)
	Clone = (Date)[<2016, 09, 20>, <2016, 10, 01>]
	Vrai = T
	func2::(par1:value1, par2:value2, par3:098765)
	Time(hours, minutes, seconds)
	Stuff { One, Two, Three }
}


%Stuff

aString4444"blabla\
		More text,,,!"

		::
		{
		
		line
		
		
		
		breaks
		
		
		}

:/?

//(Date, dates[])<2016, 10, 19, &[<2016, 10, 20>, <2016, 10, 21>, <>, <>]>

(Date, dates[], Time) < 2016, 10, 19, /* ?? */, 2016, 10, 25>


{
	a:a
	dic:dic
	tionary:tionary
}

someStringLine: this \
				is a /*
				
				/*
		*/ \
		*/ string line \
		on multiple /*
		//tttt */   \
		lines
		
anotherStringLine: Should this /* ... */ be allowed? //...
yetAnotherStringLine: 	What about /*
							...
						*/ this? Or even \
						/*
							...
						*/ this?!     /* comment 
						*/

aString:\X
{
//	48, 65, 6c
//	6C, 6f
}
						
dictFunc(var1 = "OK")
{
	a = var1
}

textFunction(function(func2))
<
	[
		<
		text 
		
		,
		
		more text,>
		<another, tuple...!>
		,,
	]
>

clone
=
Clone
20, 35, <20, >, Vrai
ggg=19

oneMillion = 1 000 000 000
bigNumber = 2 . 345 	678 m 3
binaryNumber = 0 b 1011 1101

numbers
[
	2000,
5000
	600
	123
	098
	
]

{"pp":"pp", gg=20, hh= "   this has space   "}
"09220"
_ll = F
pp<20>,,, 22
today = (Date)<2016, 09, 20>
//stringVar:?Clone //Clone isn't string so doesn't work

list(Date)
[
	<2016, 09, 20>,
	<2016, 09, 21>,
	<2016, 09, 22>,
	<2016, 09, 23>
	<,,24>,<,,25>,<,,26>,<,,27>,<,,28>,<,,29>,<,,30>,<,10,01>,<,10,02>
//	,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, //many default dates!
]

ssss::{this
is
some
text}

[:PPP, :GGG, :OK]

list2::(text1:bla, text2:blabla) //here I first wrote the name as "list" and didn't throw an error,
[                     //just silently did as if there were no errors, giving an anonymous tuple element
	<first, second>
	<this is text, also this!>,
]

list3(list4::(item1:pp, item2:oo))<[<first, second>, <text1, text2>,]>
